#####################################################################################
#
# My play-authenticate settings
#
#####################################################################################

play-authenticate {

  # If set to true, account merging is enabled, if set to false its disabled and accounts will never prompted to be merged
  # defaults to true
  accountMergeEnabled=false

  # if this is set to true, accounts are automatically linked
  # (e.g. if a user is logged in and uses a different authentication provider
  # which has NOT yet been registered to another user, this newly used authentication
  # provider gets added to the current local user
  # Handle setting this to true with care
  # If set to false, your resolver must not return null for askLink()
  # defaults to false
  accountAutoLink=true

  # Settings for the google-based authentication provider
  # if you are not using it, you can remove this portion of the config file
  # and remove the Google provider from conf/play.plugins
  google {
    redirectUri {
      # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
      secure=false

      # You can use this setting to override the automatic detection
      # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
      # host=yourdomain.com
    }

    # Google credentials
    # These are mandatory for using OAuth and need to be provided by you,
    # if you want to use Google as an authentication provider.
    # Get them here: https://code.google.com/apis/console or https://console.developers.google.com, respectively
    # Remove leading '#' after entering
    # clientId=
    # clientSecret=
    include "auth_credentials/google_oauth_credentials.conf"
  }

  # Settings for the facebook-based authentication provider
  # if you are not using it, you can remove this portion of the config file
  # and remove the facebook provider from conf/play.plugins
  facebook {
    redirectUri {
      # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
      secure=false

      # You can use this setting to override the automatic detection
      # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
      # host=yourdomain.com
    }

    # Facebook credentials
    # These are mandatory for using OAuth and need to be provided by you,
    # if you want to use facebook as an authentication provider.
    # Get them here: https://developers.facebook.com/apps
    # Remove leading '#' after entering
    # clientId=
    # clientSecret=
    include "auth_credentials/facebook_oauth_credentials.conf"
  }

  github {
    redirectUri {
      # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
      secure=false

      # You can use this setting to override the automatic detection
      # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
      # host=yourdomain.com
    }

    # Read about available scopes here: http://developer.github.com/v3/oauth/#scopes
    # scope="user,public_repo"

    # Github credentials
    # Get them here: https://github.com/settings/applications/new
    # Remove leading '#' after entering:
    # clientId=
    # clientSecret=
    include "auth_credentials/github_oauth_credentials.conf"
  }

  # Settings for the twitter-based authentication provider
  # if you are not using it, you can remove this portion of the config file
  # and remove the Twitter provider from conf/play.plugins
  twitter {
    redirectUri {
      # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
      secure=false

      # You can use this setting to override the automatic detection
      # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
      # host=yourdomain.com
    }

    # Twitter credentials
    # These are mandatory for using OAuth and need to be provided by you,
    # if you want to use twitter as an authentication provider.
    # Get the credentials here: https://dev.twitter.com/docs/auth/oauth
    # Remove leading '#' after entering
    # consumerKey=
    # consumerSecret=
    include "auth_credentials/twitter_oauth_credentials.conf"
  }

  # SMTP mailer settings
  smtp {
    include "auth_credentials/smtp_credentials.conf"
  }

  password {
    mail.verificationLink.secure = false
    mail.passwordResetLink.secure = false
    loginAfterPasswordReset = true
  }
}